
parameters:
- name: pool
  type: object
  default: {}
- name: name

jobs:
- job: Test_${{ parameters.name }}
  timeoutInMinutes: 120
  pool: ${{ parameters.pool }}
  
  strategy:
    matrix:
      Release:
        BuildConfiguration: Release
      Debug:
        BuildConfiguration: Debug

  steps:
  - task: UseDotNet@2
    displayName: Use .NET Core 5.x SDK
    inputs:
      version: 5.x
      performMultiLevelLookup: true

  - task: UseDotNet@2
    inputs:
      version: '3.1.x'
      packageType: runtime
    displayName: Install .NET Core 3.1 runtime

  - task: UseDotNet@2
    inputs:
      version: '2.1.x'
      packageType: runtime
    displayName: Install .NET Core 2.1 runtime

  - task: DotNetCoreCLI@2
    inputs:
      command: custom
      custom: tool
      arguments: install -g nbgv
    displayName: Install NBGV tool

  - script: nbgv cloud -a
    displayName: Set Version

  - task: DotNetCoreCLI@2
    inputs:
      command: test
      projects: All.sln
      arguments: -c $(BuildConfiguration) /bl:$(Build.ArtifactStagingDirectory)/Logs/${{ parameters.name }}.$(BuildConfiguration).Test.binlog --settings coverlet.runsettings --collect:"XPlat Code Coverage" --blame --blame-hang-timeout 5m 
    displayName: Run Unit Tests

  - task: CopyFiles@2
    inputs:
      contents: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'
      targetFolder: $(Build.ArtifactStagingDirectory)/coverage
    displayName: Copy raw coverage files to staging

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)/coverage
      artifactName: RawCoverage
      parallel: true
      parallelCount: 8
    displayName: Publish Raw Coverage Output    
    condition: always()

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)/Logs
      artifactName: Logs    
    displayName: Publish Build Logs      
    condition: always()