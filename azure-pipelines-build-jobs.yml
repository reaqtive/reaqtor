jobs:
  - ${{ each pool in parameters.pools }}:
    - ${{ each project in parameters.projects }}:
      - ${{ each configuration in parameters.configurations }}:
        - job:
          displayName: ${{ format('{0} {1} {2}', pool.name, project, configuration) }}
          timeoutInMinutes: 120
          pool:
            vmImage: ${{ pool.vmImage }}
          steps:
            - task: UseDotNet@2
              displayName: Use .NET Core 8.x SDK
              inputs:
                version: 8.x
                performMultiLevelLookup: true

            - task: UseDotNet@2
              inputs:
                version: '8.x'
                packageType: runtime
              displayName: Install .NET 8.0 runtime

            - powershell: |
                $existing = & dotnet tool list -g | Select-String "nbgv" 
                if (!$existing) {
                    & dotnet tool install -g nbgv
                }
              displayName: Install NBGV tool

            - script: nbgv cloud -a
              displayName: Set Version

            - task: DotNetCoreCLI@2
              inputs:
                command: custom
                custom: tool
                arguments: install -g dotnet-reportgenerator-globaltool
              displayName: Install ReportGenerator tool

            - task: DotNetCoreCLI@2
              inputs:
                command: test
                workingDirectory: ${{ project }}
                arguments: -c ${{ configuration }} /bl:$(Build.ArtifactStagingDirectory)/Logs/${{ pool.name }}.${{ project }}.${{ configuration }}.Test.binlog --settings $(Build.SourcesDirectory)/coverlet.runsettings --collect:"XPlat Code Coverage" --blame --blame-hang-timeout 5m --filter "TestCategory!~NonDeterministic_Strong"
                testRunTitle: ${{ project }} ${{ configuration }}
              displayName: Run Unit Tests

            - script: reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -sourcedirs:$(Build.SourcesDirectory) -targetdir:$(Build.ArtifactStagingDirectory)/coverage/${{ pool.name }}.${{ project }}.${{ configuration }} -reporttypes:"Cobertura"
              displayName: Consolidate Coverage Runs
              condition: succeededOrFailed()

            - task: PublishBuildArtifacts@1
              inputs:
                pathToPublish: $(Build.ArtifactStagingDirectory)/coverage
                artifactName: RawCoverage
                parallel: true
                parallelCount: 8
              displayName: Publish Raw Coverage Output
              condition: succeededOrFailed()

            - task: PublishBuildArtifacts@1
              inputs:
                pathToPublish: $(Build.ArtifactStagingDirectory)/Logs
                artifactName: Logs
                parallel: true
                parallelCount: 8
              displayName: Publish Build Logs
              condition: always()
